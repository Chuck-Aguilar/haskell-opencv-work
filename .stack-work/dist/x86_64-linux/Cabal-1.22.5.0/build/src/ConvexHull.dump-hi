
==================== FINAL INTERFACE ====================
2016-11-07 17:21:49.427544 UTC

interface simpl_3KtLGDpFPvjB6VnwWh4q2E:ConvexHull 7103
  interface hash: 6d98e8f6d4255d20ad2b1d02da008cd4
  ABI hash: 1632b0ec6e0efa0b9b03eaeb827f673a
  export-list hash: 5a106fd7db33c9820a85cc3d924e307d
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 553e9ae98c737f4e18a6dcc15164f1ca
  sig of: Nothing
  used TH splices: False
  where
exports:
  ConvexHull.convexHull
module dependencies:
package dependencies: base-4.8.2.0* ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:GHC.Generics
import  -/  base-4.8.2.0:Data.List 3f0782c8d4bf50eecefcd5ea1798aac8
import  -/  base-4.8.2.0:Data.OldList d8fd80b0e14aa085ce6219cd89dad356
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.Int 28d8a9f7cfc272358fb4631d98c579ce
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
7370a3390244684f9fef86743a5fe5ab
  type R = GHC.Int.Int32
269b6ce2bac2198eaf3eb9b5a1ce326c
  type R2 = (ConvexHull.R, ConvexHull.R)
ad21a3fef117368190adb380d1675561
  convexHull :: [ConvexHull.R2] -> [ConvexHull.R2]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ ds :: [ConvexHull.R2] ->
                 case ds of wild {
                   [] -> GHC.Types.[] @ ConvexHull.R2
                   : p ds1
                   -> case ds1 of wild1 {
                        [] -> GHC.Types.: @ ConvexHull.R2 p (GHC.Types.[] @ ConvexHull.R2)
                        : ipv ipv1
                        -> let {
                             sorted :: [ConvexHull.R2]
                             = Data.OldList.sortBy @ ConvexHull.R2 ConvexHull.convexHull1 wild
                           } in
                           GHC.Base.++
                             @ (ConvexHull.R, ConvexHull.R)
                             (ConvexHull.convexHull_go (GHC.Types.[] @ ConvexHull.R2) sorted)
                             (ConvexHull.convexHull_go
                                (GHC.Types.[] @ ConvexHull.R2)
                                (GHC.List.reverse1
                                   @ ConvexHull.R2
                                   sorted
                                   (GHC.Types.[] @ ConvexHull.R2))) } }) -}
8f764080ecf89701e74732b3e57b4cd6
  convexHull1 ::
    (GHC.Int.Int32, GHC.Int.Int32)
    -> (GHC.Int.Int32, GHC.Int.Int32) -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ w3 :: (GHC.Int.Int32, GHC.Int.Int32)
                   w4 :: (GHC.Int.Int32, GHC.Int.Int32)[OneShot] ->
                 case w3 of ww { (,) ww1 ww2 ->
                 case w4 of ww3 { (,) ww4 ww5 ->
                 case ww1 of wild { GHC.Int.I32# a1 ->
                 case ww4 of wild1 { GHC.Int.I32# b1 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# a1 b1) of wild2 {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# a1 b1) of wild3 {
                        GHC.Types.False -> GHC.Types.GT
                        GHC.Types.True -> GHC.Int.$fOrdInt32_$ccompare ww2 ww5 }
                   GHC.Types.True -> GHC.Types.LT } } } } }) -}
f0ff4bf7190aed9c1e8163e88e6b8f77
  convexHull_go ::
    [ConvexHull.R2] -> [ConvexHull.R2] -> [ConvexHull.R2]
  {- Arity: 2, Strictness: <S,U><S,U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

