from rdp import rdp
import numpy as np
from scipy.spatial import ConvexHull
import matplotlib.pyplot as plt
import cv2



points1 = [(573,95),(574,94),(580,94),(581,95),(584,95),(585,94),(587,94),(588,95),(590,95),(591,94),(611,94),(612,95),(614,95),(615,94),(616,94),(617,95),(622,95),(623,94),(624,95),(630,95),(632,97),(632,106),(631,107),(631,118),(630,119),(630,140),(631,141),(631,146),(630,147),(631,148),(631,149),(630,150),(630,160),(631,161),(631,166),(630,167),(630,169),(631,170),(630,171),(630,217),(629,218),(629,228),(630,229),(630,231),(629,232),(629,248),(628,249),(628,253),(629,254),(629,255),(630,256),(629,257),(629,260),(628,261),(629,262),(628,263),(629,264),(629,272),(628,273),(628,275),(629,276),(628,277),(629,278),(628,279),(628,283),(629,284),(628,285),(628,316),(629,317),(629,327),(628,328),(628,329),(629,330),(629,344),(630,345),(630,347),(629,348),(629,358),(630,359),(630,375),(631,376),(631,377),(630,378),(630,392),(631,393),(631,408),(629,410),(484,410),(483,409),(482,409),(481,410),(478,410),(477,409),(476,410),(475,410),(474,409),(471,409),(470,410),(464,410),(463,409),(460,409),(459,410),(458,410),(457,409),(454,409),(453,410),(438,410),(437,409),(391,409),(390,410),(380,410),(379,409),(377,409),(376,410),(277,410),(276,411),(275,410),(271,410),(270,411),(262,411),(261,410),(259,410),(258,411),(252,411),(251,410),(250,410),(249,411),(248,410),(247,411),(182,411),(181,412),(179,412),(178,411),(176,411),(175,412),(128,412),(127,413),(126,413),(125,412),(123,412),(122,413),(110,413),(109,412),(108,413),(107,413),(106,412),(101,412),(100,413),(88,413),(87,412),(84,412),(83,413),(82,413),(81,412),(80,413),(77,413),(76,412),(74,412),(73,413),(72,412),(71,413),(68,413),(67,412),(66,413),(59,413),(58,412),(48,412),(47,411),(46,412),(45,411),(34,411),(32,409),(32,407),(33,406),(33,405),(32,404),(32,399),(31,398),(31,397),(32,396),(32,393),(31,392),(31,365),(32,364),(32,362),(31,361),(32,360),(32,354),(31,353),(31,352),(32,351),(32,339),(31,338),(31,332),(32,331),(32,327),(31,326),(32,325),(32,309),(33,308),(32,307),(32,304),(33,303),(33,282),(32,281),(32,271),(33,270),(33,267),(32,266),(32,262),(31,261),(31,260),(30,260),(29,259),(28,259),(27,258),(28,257),(29,257),(30,256),(30,254),(32,252),(32,231),(31,230),(31,224),(32,223),(32,222),(31,221),(31,210),(30,209),(30,206),(31,205),(31,195),(32,194),(32,178),(31,177),(31,173),(32,172),(31,171),(31,166),(30,165),(31,164),(31,160),(30,159),(30,150),(29,149),(29,137),(28,136),(28,129),(27,128),(27,115),(26,114),(26,113),(27,112),(27,109),(26,108),(26,98),(28,96),(39,96),(40,97),(45,97),(46,96),(47,97),(52,97),(53,96),(56,96),(57,97),(61,97),(62,96),(63,96),(64,97),(65,96),(68,96),(69,97),(70,96),(71,97),(72,96),(73,96),(74,97),(75,96),(77,96),(78,97),(79,97),(80,96),(87,96),(88,97),(90,97),(91,96),(103,96),(104,97),(105,97),(106,96),(107,96),(108,97),(112,97),(113,96),(119,96),(120,97),(126,97),(127,96),(137,96),(138,97),(139,96),(143,96),(144,97),(145,96),(165,96),(166,97),(179,97),(180,96),(181,97),(182,97),(183,96),(184,97),(195,97),(196,96),(197,97),(198,96),(205,96),(206,97),(207,97),(208,96),(215,96),(216,97),(217,96),(220,96),(221,97),(227,97),(228,96),(261,96),(262,97),(263,96),(275,96),(276,97),(279,97),(280,96),(282,96),(283,97),(285,97),(286,96),(290,96),(291,97),(292,96),(296,96),(297,97),(298,96),(304,96),(305,97),(306,97),(307,96),(322,96),(323,97),(325,97),(326,96),(328,96),(329,97),(330,96),(338,96),(339,97),(347,97),(348,96),(361,96),(362,97),(366,97),(367,96),(394,96),(395,95),(447,95),(448,96),(449,95),(465,95),(466,96),(468,96),(469,95),(472,95),(473,96),(478,96),(479,95),(480,96),(481,95),(482,95),(483,96),(486,96),(487,95)]


points2 = [(574,94),(573,95),(487,95),(486,96),(483,96),(482,95),(481,95),(480,96),(479,95),(478,96),(473,96),(472,95),(469,95),(468,96),(466,96),(465,95),(449,95),(448,96),(447,95),(395,95),(394,96),(367,96),(366,97),(362,97),(361,96),(348,96),(347,97),(339,97),(338,96),(330,96),(329,97),(328,96),(326,96),(325,97),(323,97),(322,96),(307,96),(306,97),(305,97),(304,96),(298,96),(297,97),(296,96),(292,96),(291,97),(290,96),(286,96),(285,97),(283,97),(282,96),(280,96),(279,97),(276,97),(275,96),(263,96),(262,97),(261,96),(228,96),(227,97),(221,97),(220,96),(217,96),(216,97),(215,96),(208,96),(207,97),(206,97),(205,96),(198,96),(197,97),(196,96),(195,97),(184,97),(183,96),(182,97),(181,97),(180,96),(179,97),(166,97),(165,96),(145,96),(144,97),(143,96),(139,96),(138,97),(137,96),(127,96),(126,97),(120,97),(119,96),(113,96),(112,97),(108,97),(107,96),(106,96),(105,97),(104,97),(103,96),(91,96),(90,97),(88,97),(87,96),(80,96),(79,97),(78,97),(77,96),(75,96),(74,97),(73,96),(72,96),(71,97),(70,96),(69,97),(68,96),(65,96),(64,97),(63,96),(62,96),(61,97),(57,97),(56,96),(53,96),(52,97),(47,97),(46,96),(45,97),(40,97),(39,96),(28,96),(27,97),(26,97),(26,108),(27,109),(27,112),(26,113),(26,114),(27,115),(27,128),(28,129),(28,136),(29,137),(29,149),(30,150),(30,159),(31,160),(31,164),(30,165),(31,166),(31,171),(32,172),(31,173),(31,177),(32,178),(32,194),(31,195),(31,205),(30,206),(30,209),(31,210),(31,221),(32,222),(32,223),(31,224),(31,230),(32,231),(32,251),(30,253),(30,255),(28,257),(27,257),(27,259),(29,259),(32,262),(32,266),(33,267),(33,270),(32,271),(32,281),(33,282),(33,303),(32,304),(32,307),(33,308),(32,309),(32,325),(31,326),(32,327),(32,331),(31,332),(31,338),(32,339),(32,351),(31,352),(31,353),(32,354),(32,360),(31,361),(32,362),(32,364),(31,365),(31,392),(32,393),(32,396),(31,397),(31,398),(32,399),(32,404),(33,405),(33,406),(32,407),(32,409),(33,410),(33,411),(45,411),(46,412),(47,411),(48,412),(58,412),(59,413),(66,413),(67,412),(68,413),(71,413),(72,412),(73,413),(74,412),(76,412),(77,413),(80,413),(81,412),(82,413),(83,413),(84,412),(87,412),(88,413),(100,413),(101,412),(106,412),(107,413),(108,413),(109,412),(110,413),(122,413),(123,412),(125,412),(126,413),(127,413),(128,412),(175,412),(176,411),(178,411),(179,412),(181,412),(182,411),(247,411),(248,410),(249,411),(250,410),(251,410),(252,411),(258,411),(259,410),(261,410),(262,411),(270,411),(271,410),(275,410),(276,411),(277,410),(376,410),(377,409),(379,409),(380,410),(390,410),(391,409),(437,409),(438,410),(453,410),(454,409),(457,409),(458,410),(459,410),(460,409),(463,409),(464,410),(470,410),(471,409),(474,409),(475,410),(476,410),(477,409),(478,410),(481,410),(482,409),(483,409),(484,410),(630,410),(631,409),(631,393),(630,392),(630,378),(631,377),(631,376),(630,375),(630,359),(629,358),(629,348),(630,347),(630,345),(629,344),(629,330),(628,329),(628,328),(629,327),(629,317),(628,316),(628,285),(629,284),(628,283),(628,279),(629,278),(628,277),(629,276),(628,275),(628,273),(629,272),(629,264),(628,263),(629,262),(628,261),(629,260),(629,257),(630,256),(629,255),(629,253),(628,252),(628,249),(629,248),(629,232),(630,231),(630,229),(629,228),(629,218),(630,217),(630,171),(631,170),(630,169),(630,167),(631,166),(631,161),(630,160),(630,150),(631,149),(631,148),(630,147),(631,146),(631,141),(630,140),(630,119),(631,118),(631,107),(632,106),(632,96),(631,96),(630,95),(624,95),(623,94),(622,95),(617,95),(616,94),(615,94),(614,95),(612,95),(611,94),(591,94),(590,95),(588,95),(587,94),(585,94),(584,95),(581,95),(580,94)]

points3 = [(63,162),(62,163),(62,169),(63,170),(63,172),(66,175),(68,175),(69,176),(71,176),(72,177),(79,177),(80,178),(86,178),(87,179),(94,179),(95,180),(98,180),(99,179),(100,179),(100,178),(101,177),(101,173),(100,172),(100,169),(99,168),(96,168),(96,169),(94,171),(86,171),(85,170),(79,170),(78,169),(73,169),(72,168),(70,168),(67,165),(67,164),(66,163),(66,162)]

points4 = [(1,4),(2,3),(4,2),(6,2),(8,3),(9,5)]

testing_point = [(33,411),(630,410),(632,106),(39,96)]
testing_points = [(131,161),(45,160),(39,357),(390,368),(475,369),(482,171)]
testing_points1 = [(161,163),(481,170),(476,366),(348,366),(41,359),(41,162)]
testing_points2 = [(160,343),(186,333),(163,338),(159,332),(135,331),(132,351),(179,354),(185,353),(138,347),(136,336),(137,335)]


#points = np.random.rand(30, 2)   # 30 random points in 2-D

points = np.asarray(testing_points2)			# 38.46940258945182  4225396744416663
# points = cv2.approxPolyDP(np.asarray(points1), 38.422539674441666, True)
print (cv2.approxPolyDP(np.asarray(testing_points2), 5.3, True))


hull = ConvexHull(points)

plt.plot(points[:,0], points[:,1], 'o')


for simplex in hull.simplices:
	plt.plot(points[simplex, 0], points[simplex, 1], 'k-')

plt.plot(points[hull.vertices,0], points[hull.vertices,1], 'r--', lw=2)
plt.plot(points[hull.vertices[0],0], points[hull.vertices[0],1], 'ro')
plt.show()
